#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2022 Osiris Alejandro Gomez <osiux@osiux.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# shellcheck disable=SC1090
# shellcheck source=/dev/null

DIR_BIN="$(dirname "$0")" && source "$DIR_BIN/git-src-common"

function usage()
{
cat << EOF

## \`$BIN\` Find and show value in all tags and branchs

### Usage:

\`\`\`bash

  $BIN VALUE [FILE]

\`\`\`

### Example:

\`\`\`bash

  $BIN awx_version group_vars/all.yml

    v0.11.0 awx_version: True
    v0.10.0 awx_version: False

\`\`\`

EOF
exit 0
}

[[ "$1" =~ ^[-]+(h|help) ]] && usage

[[ -d "$PWD/.git"       ]] || die "INVALID GIT REPOSITORY"
[[ -z "$1"              ]] && die "EMPTY VALUE"
[[ -z "$2"              ]] || FILE="$2"
[[ -z "$FILE"           ]] && die "EMPTY FILE"
[[ -n "$BRANCH_EXCLUDE" ]] || BRANCH_EXCLUDE='HEAD'

VALUE="$1"

TMP="$(mktemp)"
git stash >/dev/null 2>/dev/null
git tag | sort -V > "$TMP"

while read -r TAG _
do

  git checkout "$TAG" >/dev/null 2>/dev/null

  GREP="$(grep "$VALUE" "$FILE" 2>/dev/null)"
  [[ -z "$GREP" ]] && continue

  printf "%s %s\\n" "$TAG" "$GREP"

done < "$TMP"

git branch                     \
  | tr '*' ' '                 \
  | grep -vE "$BRANCH_EXCLUDE" \
  | tr -d ' '                  > "$TMP"

while read -r BRANCH _
do

  git checkout "$BRANCH" >/dev/null 2>/dev/null

  GREP="$(grep "$VALUE" "$FILE" 2>/dev/null)"
  [[ -z "$GREP" ]] && continue

  printf "%s %s\\n" "$BRANCH" "$GREP"

done < "$TMP"

rm -f "$TMP"
