#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2022 Osiris Alejandro Gomez <osiux@osiux.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

[[ -n "$NORMAL" ]] || NORMAL=$(tput sgr0)
[[ -n "$RED"    ]] || RED=$(tput setaf 196)

function stderror()
{
  echo >&2 "${RED}ERROR: ${1}${NORMAL}"
}

function die()
{
  stderror "$1"
  exit 1
}

[[ -d "$PWD/.git" ]] || exit 1
[[ -n "$ORIGIN"   ]] || ORIGIN='origin'
[[ -n "$NAME"     ]] || NAME="$(basename "$PWD")"

PREVIOUS_BRANCH="$(git branch | grep -E '^\*' | awk '{print $2}')"


git stash
git fetch || die "FAILED TO FETCH $(dirname "$PWD") IN $NAME"

git branch -r | cut -d/ -f2- | grep -v HEAD | while read -r B
do

  UPSTREAM="--set-upstream-to=origin/$B"
  git checkout "$B" \
    && git branch "$UPSTREAM" "$B" \
    && git pull
  RC="$?"
  [[ "$RC" -ne 0 ]] && stderror "FAILED TO PULL BRANCH $B IN $NAME"

done

git checkout "$PREVIOUS_BRANCH"
